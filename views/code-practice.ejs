<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<title>Code Practice Object</title>
	<link rel="stylesheet" href="/public/css/wizard.css">
	<script src="https://cdn.jsdelivr.net/npm/marked/lib/marked.umd.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/monaco-editor@latest/min/vs/loader.js" defer></script>
	<script type="module" src="/public/js/code-practice.js" defer></script>
</head>

<body>
	<div class="container">
		<div class="page-header">
			<h1>Code Practice Object</h1>
			<p class="subtitle">Create an interactive coding exercise for your students</p>
		</div>

		<div class="example-section">
			<h3>Quick Start Examples</h3>
			<p>Load a pre-built example to get started quickly:</p>
			<div class="example-buttons">
				<button type="button" class="example-btn" data-language="javascript">
					üìú JavaScript Example
				</button>
				<button type="button" class="example-btn" data-language="python">
					üêç Python Example
				</button>
				<button type="button" class="example-btn" data-language="csharp">
					‚ö° C# Example
				</button>
				<button type="button" class="example-btn" data-language="java">
					‚òï Java Example
				</button>
				<button type="button" class="example-btn" data-language="cpp">
					‚öôÔ∏è C++ Example
				</button>
				<button type="button" class="example-btn" data-language="php">
					üêò PHP Example
				</button>
				<button type="button" class="example-btn" data-language="powershell">
					üíô PowerShell Example
				</button>
			</div>
		</div>

		<div style="margin: 15px 0; display: flex; justify-content: flex-end; gap: 8px;">
			<button type="button" id="exportBtn" class="small-btn"
				style="background: #28a745; color: white; border: none; padding: 6px 12px; border-radius: 4px; font-size: 13px; cursor: pointer;">Export
				JSON</button>
			<button type="button" id="importBtn" class="small-btn"
				style="background: #007bff; color: white; border: none; padding: 6px 12px; border-radius: 4px; font-size: 13px; cursor: pointer;">Import
				JSON</button>
		</div>

		<div id="savedDataNotice"
			style="display:none; margin: 0 0 25px 0; padding: 10px; background: #e8f4fd; border: 1px solid #bee5eb; border-radius: 8px; font-size: 14px;">
			<div style="display: flex; justify-content: space-between; align-items: center;">
				<span>üìÅ <strong>Saved form data detected.</strong> Your previous work has been restored.</span>
				<button type="button" id="clearBtn" class="small-btn"
					style="background: #dc3545; color: white; border: none; padding: 4px 8px; border-radius: 4px; font-size: 12px; cursor: pointer;">Clear
					Saved Work</button>
			</div>
		</div>

		<form id="editorForm" action="/api/v1/generate" method="post">
			<input type="hidden" name="objectType" value="code-practice">
			<input type="hidden" id="instructionsMarkdown" name="instructionsMarkdown">

			<div class="form-group">
				<label for="courseTitle">Course Title</label>
				<input type="text" id="courseTitle" name="courseTitle" required>
			</div>

			<div class="form-group">
				<label for="practiceTitle">Practice Title</label>
				<input type="text" id="practiceTitle" name="practiceTitle" required>
			</div>

			<div class="form-group">
				<label for="objectId">Object ID</label>
				<input type="text" id="objectId" name="objectId" readonly>
			</div>

			<div class="form-group">
				<label for="language">Programming Language</label>
				<select id="language" name="language" required>
					<option value="">-- Select Language --</option>
					<option value="csharp">C#</option>
					<option value="cpp">C++</option>
					<option value="java">Java</option>
					<option value="javascript">JavaScript</option>
					<option value="php">PHP</option>
					<option value="powershell">Powershell</option>
					<option value="python">Python</option>
				</select>
			</div>

			<div class="form-group">
				<label for="instructions">Instructions for Students</label>
				<div class="markdown-editor">
					<div class="markdown-tabs">
						<button type="button" class="tab-btn active" data-tab="write">Write (Text/Markdown)</button>
						<button type="button" class="tab-btn" data-tab="preview">MarkdownPreview</button>
					</div>
					<div class="markdown-content">
						<textarea id="instructions" name="instructions" required
							placeholder="Describe what students need to do using Markdown...&#10;&#10;## Example:&#10;&#10;1. **Complete** the `addNumbers` function&#10;2. Test your code by clicking Run&#10;3. Make sure all tests pass&#10;&#10;> **Tip:** Use `console.log()` for debugging"></textarea>
						<div id="instructionsPreview" class="markdown-preview" style="display: none;"></div>
					</div>
				</div>
			</div>

			<div class="form-group">
				<label for="configCode">Configuration Code (optional)</label>
				<div id="monacoConfigCode"></div>
				<div class="variable-buttons-panel">
					<div class="variable-buttons-label">Quick Insert Variables:</div>
					<div class="variable-buttons">
						<!-- Code Insertion -->
						<button type="button" class="var-btn" data-editor="config" data-variable="student_code" title="Placeholder where student code will be inserted">{{student_code}}</button>
						<!-- Student Variables -->
						<button type="button" class="var-btn" data-editor="config" data-variable="id" title="Student ID number">{{id}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="first_name" title="Student's first name">{{first_name}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="last_name" title="Student's last name">{{last_name}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="full_name" title="Student's full name (first + last)">{{full_name}}</button>
						<!-- Context Variables -->
						<button type="button" class="var-btn" data-editor="config" data-variable="course_title" title="Course title">{{course_title}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="practice_title" title="Assignment/practice title">{{practice_title}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="object_id" title="SCORM object identifier">{{object_id}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="language" title="Programming language being used">{{language}}</button>
						<!-- Date & Time Variables -->
						<button type="button" class="var-btn" data-editor="config" data-variable="date" title="Current date (localized format)">{{date}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="time" title="Current time (localized format)">{{time}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="datetime" title="Current date and time (localized format)">{{datetime}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="timestamp" title="Unix timestamp">{{timestamp}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="year" title="Current year">{{year}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="month" title="Current month name">{{month}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="day" title="Current day of week">{{day}}</button>
						<!-- Dynamic Variables -->
						<button type="button" class="var-btn" data-editor="config" data-variable="random_number" title="Random number (1-1000)">{{random_number}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="random_word" title="Random word from predefined list">{{random_word}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="uuid" title="Generated UUID">{{uuid}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="attempt_count" title="Number of code runs this session">{{attempt_count}}</button>
						<button type="button" class="var-btn" data-editor="config" data-variable="session_time" title="Seconds since page load">{{session_time}}</button>
					</div>
				</div>
				<textarea id="configCode" name="configCode" style="display:none;"></textarea>
			</div>

			<div class="form-group">
				<label for="startingCode">Starting Code</label>
				<div id="monacoStartingCode"></div>
				<div class="variable-buttons-panel">
					<div class="variable-buttons-label">Quick Insert Variables:</div>
					<div class="variable-buttons">
						<!-- Student Variables -->
						<button type="button" class="var-btn" data-editor="starting" data-variable="id" title="Student ID number">{{id}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="first_name" title="Student's first name">{{first_name}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="last_name" title="Student's last name">{{last_name}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="full_name" title="Student's full name (first + last)">{{full_name}}</button>
						<!-- Context Variables -->
						<button type="button" class="var-btn" data-editor="starting" data-variable="course_title" title="Course title">{{course_title}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="practice_title" title="Assignment/practice title">{{practice_title}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="object_id" title="SCORM object identifier">{{object_id}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="language" title="Programming language being used">{{language}}</button>
						<!-- Date & Time Variables -->
						<button type="button" class="var-btn" data-editor="starting" data-variable="date" title="Current date (localized format)">{{date}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="time" title="Current time (localized format)">{{time}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="datetime" title="Current date and time (localized format)">{{datetime}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="timestamp" title="Unix timestamp">{{timestamp}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="year" title="Current year">{{year}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="month" title="Current month name">{{month}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="day" title="Current day of week">{{day}}</button>
						<!-- Dynamic Variables -->
						<button type="button" class="var-btn" data-editor="starting" data-variable="random_number" title="Random number (1-1000)">{{random_number}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="random_word" title="Random word from predefined list">{{random_word}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="uuid" title="Generated UUID">{{uuid}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="attempt_count" title="Number of code runs this session">{{attempt_count}}</button>
						<button type="button" class="var-btn" data-editor="starting" data-variable="session_time" title="Seconds since page load">{{session_time}}</button>
						<!-- Common Code Helpers -->
						<button type="button" class="var-btn" data-editor="starting" data-variable="// TODO: Write your code here" title="TODO comment placeholder">// TODO: Write your code here</button>
					</div>
				</div>
				<textarea id="startingCode" name="startingCode" style="display:none;"></textarea>
			</div>

			<div class="button-group">
				<button type="submit" class="submit-btn">Generate Code Practice SCORM Object</button>
			</div>
		</form>
		<div id="content"></div>
	</div>
	<script type="module">
		import { marked } from "https://cdn.jsdelivr.net/npm/marked/lib/marked.esm.js";
		
		// Configure marked options
		marked.setOptions({
			breaks: true,
			gfm: true
		});
		
		// Markdown preview functionality
		const instructionsTextarea = document.getElementById('instructions');
		const instructionsPreview = document.getElementById('instructionsPreview');
		const tabButtons = document.querySelectorAll('.tab-btn');
		
		// Tab switching
		tabButtons.forEach(button => {
			button.addEventListener('click', () => {
				const tab = button.dataset.tab;
				
				// Update active tab
				tabButtons.forEach(btn => btn.classList.remove('active'));
				button.classList.add('active');
				
				// Show/hide content
				if (tab === 'write') {
					instructionsTextarea.style.display = 'block';
					instructionsPreview.style.display = 'none';
				} else {
					// Update preview content
					const markdownText = instructionsTextarea.value || '*No content to preview*';
					instructionsPreview.innerHTML = marked.parse(markdownText);
					
					instructionsTextarea.style.display = 'none';
					instructionsPreview.style.display = 'block';
				}
			});
		});
		
		// Auto-update preview when typing (but only if preview tab is active)
		instructionsTextarea.addEventListener('input', () => {
			const activeTab = document.querySelector('.tab-btn.active');
			if (activeTab && activeTab.dataset.tab === 'preview') {
				const markdownText = instructionsTextarea.value || '*No content to preview*';
				instructionsPreview.innerHTML = marked.parse(markdownText);
			}
		});
	</script>
</body>

</html>